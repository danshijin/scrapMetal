<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">

<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/" debug="false">

	<!-- 定义输出方式  常用的三种输出方式如下：
	org.apache.log4j.ConsoleAppender (控制台)
    org.apache.log4j.FileAppender (文件)
    org.apache.log4j.DailyRollingFileAppender (每天产生一个日志文件) 
	-->
	<appender name="CONSOLE" class="org.apache.log4j.ConsoleAppender">
		<!-- 输出样式 -->
		<!-- 
		%c    输出所属类的全名，可在修改为 %d{Num} ,Num类名输出的维（如："org.apache.elathen.ClassName",%C{2}将输出elathen.ClassName）
		%d    输出日志时间其格式为 %d{yyyy-MM-dd HH:mm:ss,SSS}，可指定格式 如 %d{HH:mm:ss}
		%l    输出日志事件发生位置，包括类目名、发生线程，在代码中的行数
		%n    换行符
		%m    输出代码指定信息，如info(“message”),输出message
		%p    输出优先级，即 FATAL ,ERROR 等
		%r    输出从启动到显示该log信息所耗费的毫秒数
		%t    输出产生该日志事件的线程名 
		-->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd hh:mm:ss}] %5p %c{2}: %m%n" />
		</layout>
	</appender>


	<appender name="file_log" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="file" value="${smm.scrapMetal}/logs/sample.log"/>  
        <param name="append" value="true"/>  
        <param name="encoding" value="utf-8"/>  
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss}] %5p %c{2}: %m%n" />
		</layout>
	</appender>

	<!-- mybatis sql语句输出配置 -->
	<logger name="com.ibatis" additivity="true"> 
		<level value="DEBUG" /> 
	</logger> 

	<logger name="java.sql.Connection" additivity="true"> 
		<level value="DEBUG" /> 
	</logger> 

	<logger name="java.sql.Statement" additivity="true"> 
		<level value="DEBUG" /> 
	</logger> 

	<logger name="java.sql.PreparedStatement" additivity="true"> 
		<level value="DEBUG" /> 
	</logger>

	<logger name="java.sql.ResultSet" additivity="true"> 
		<level value="DEBUG" /> 
	</logger> 
	<!-- end mybatis sql语句输出配置 -->



	<!-- 配合日志输出器使用	 -->
	<!-- <appender name="error-log" class="org.apache.log4j.DailyRollingFileAppender">
		<param name="file" value="/logs/error.log"/>  
        <param name="append" value="true"/>  
        <param name="encoding" value="GBK"/>  
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="[%d{yyyy-MM-dd hh:mm:ss,SSS}] %t %5p %c{2}: %m%n" />
		</layout>
	</appender> -->


	<!-- 定义日志输出器
	name 属性可设置类名(com.smm.logger.ErrorLog)、输出器名。additivity 定义是否遵循默认的继承机制
	代码里使用 Logger.getLogger(className|输出器名称) 获取对应的日志输出器。如果没有找到，使用根日志输出器   
	配合 appender 使用，可将不同的日志输出到不同的位置
	日志级别：FATAL ,ERROR ,WARN ,INFO ,DEBUG
	-->
	<!-- <logger name="error-logger" additivity="false">  
		<level value="ERROR" />
        <appender-ref ref="error-log"/>  
    </logger>  --> 


	<!-- 根日志输出器 -->
	<root>
		<level value="INFO" />
		<appender-ref ref="CONSOLE" />
		<appender-ref ref="file_log" />
	</root>


</log4j:configuration>